/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Form = {
  _id: string;
  _type: "form";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      };
      _type: "link";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | ({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  }>;
  fields?: Array<({
    _key: string;
  } & TextField) | ({
    _key: string;
  } & TextArea) | ({
    _key: string;
  } & EmailField) | ({
    _key: string;
  } & PhoneField) | ({
    _key: string;
  } & AddressField) | ({
    _key: string;
  } & CheckBoxes) | ({
    _key: string;
  } & RadioButtons) | ({
    _key: string;
  } & SelectField) | ({
    _key: string;
  } & FileUpload) | ({
    _key: string;
  } & TimeField) | ({
    _key: string;
  } & DateField) | ({
    _key: string;
  } & DateTimeField)>;
  submitText?: string;
  successMessage?: string;
};

export type DateTimeField = {
  _type: "dateTimeField";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type DateField = {
  _type: "dateField";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type TimeField = {
  _type: "timeField";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type FileUpload = {
  _type: "fileUpload";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type SelectField = {
  _type: "selectField";
  name?: string;
  options?: Array<string>;
  fieldOptions?: FieldOptions;
};

export type RadioButtons = {
  _type: "radioButtons";
  name?: string;
  options?: Array<string>;
  fieldOptions?: FieldOptions;
};

export type CheckBoxes = {
  _type: "checkBoxes";
  name?: string;
  options?: Array<string>;
  fieldOptions?: FieldOptions;
};

export type AddressField = {
  _type: "addressField";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type PhoneField = {
  _type: "phoneField";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type EmailField = {
  _type: "emailField";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type TextArea = {
  _type: "textArea";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type TextField = {
  _type: "textField";
  name?: string;
  fieldOptions?: FieldOptions;
};

export type FieldOptions = {
  _type: "fieldOptions";
  halfWidth?: boolean;
  required?: boolean;
  description?: string;
  adminLabel?: string;
};

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  question?: string;
  slug?: Slug;
  answer?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      };
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Schedule = {
  _type: "schedule";
  heading?: string;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  scheduleItems?: Array<{
    _key: string;
  } & ScheduleItem>;
};

export type ScheduleItem = {
  _type: "scheduleItem";
  time?: string;
  label?: string;
  subLabel?: string;
  eventType?: Array<string>;
};

export type Artist = {
  _id: string;
  _type: "artist";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  local?: boolean;
  spotify?: string;
};

export type Connect = {
  _id: string;
  _type: "connect";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  slug?: Slug;
  text?: string;
  menu?: Array<{
    _key: string;
  } & MenuItem>;
};

export type FooterLogo = {
  _type: "footerLogo";
  label?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  link?: string;
};

export type FooterSettings = {
  _id: string;
  _type: "footerSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  footerNav?: Array<{
    _key: string;
  } & MenuItem>;
  footerLogos?: Array<{
    _key: string;
  } & FooterLogo>;
  sponsor?: FooterSponsor;
};

export type FooterSponsor = {
  _type: "footerSponsor";
  heading?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  link?: string;
};

export type Tickets = {
  _id: string;
  _type: "tickets";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  ticketOptions?: Array<{
    _key: string;
  } & TicketOption>;
  text?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      };
      _type: "link";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | ({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  }>;
};

export type TicketOption = {
  _type: "ticketOption";
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  price?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      };
      _type: "link";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | ({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  }>;
  buyText?: string;
  buyLink?: string;
};

export type Social = {
  _type: "social";
  facebook?: string;
  instagram?: string;
  twitter?: string;
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteName?: string;
  mainMenu?: Array<{
    _key: string;
  } & MenuItem>;
  headerText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      };
      _type: "link";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | ({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  }>;
  contact?: ContactInfo;
};

export type ContactInfo = {
  _type: "contactInfo";
  phone?: string;
  email?: string;
  social?: Social;
};

export type TextOnly = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet";
  markDefs?: Array<{
    externalUrl?: string;
    url?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "home";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "lineupPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "infoPage";
    };
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type MerchBlock = {
  _type: "merchBlock";
  heading?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  description?: string;
  link?: Link;
};

export type MenuItem = {
  _type: "menuItem";
  label?: string;
  link?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "home";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "lineupPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "infoPage";
  };
  anchor?: string;
  externalUrl?: string;
  subMenu?: Array<{
    _key: string;
  } & MenuItem>;
  buttonStyles?: boolean;
};

export type SpecialBlock = {
  _type: "specialBlock";
  heading?: string;
  reverse?: boolean;
  backgroundPattern?: boolean;
  brickRoadBg?: boolean;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  copy?: string;
  link?: Link;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet";
  markDefs?: Array<{
    externalUrl?: string;
    url?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "home";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "lineupPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "infoPage";
    };
    _type: "link";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "file";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  _type: "altImage";
  _key: string;
} | ({
  _key: string;
} & MerchBlock) | ({
  _key: string;
} & SpecialBlock) | {
  _ref: string;
  _type: "reference";
  _weak?: boolean;
  _key: string;
  [internalGroqTypeReferenceTo]?: "form";
}>;

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  hero?: Hero;
  subNav?: Array<{
    _key: string;
  } & MenuItem>;
  content?: BlockContent;
};

export type Home = {
  _id: string;
  _type: "home";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  hero?: Hero;
  content?: BlockContent;
};

export type InfoPage = {
  _id: string;
  _type: "infoPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  content?: BlockContent;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type LineupPage = {
  _id: string;
  _type: "lineupPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  schedules?: Array<{
    _key: string;
  } & Schedule>;
};

export type Hero = {
  _type: "hero";
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  };
  heroText?: string;
  heroSubText?: string;
  heroButton?: Link;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Link = {
  _type: "link";
  url?: string;
  label?: string;
};

export type AltImage = {
  _type: "altImage";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | Geopoint | Form | DateTimeField | DateField | TimeField | FileUpload | SelectField | RadioButtons | CheckBoxes | AddressField | PhoneField | EmailField | TextArea | TextField | FieldOptions | Faq | Schedule | ScheduleItem | Artist | Connect | FooterLogo | FooterSettings | FooterSponsor | Tickets | TicketOption | Social | SiteSettings | ContactInfo | TextOnly | MerchBlock | MenuItem | SpecialBlock | BlockContent | Page | Home | InfoPage | SanityFileAsset | LineupPage | Hero | Slug | Link | AltImage | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: HEADER_QUERY
// Query: *[_type == "siteSettings"][0] {    headerText,    mainMenu[] {      label,      buttonStyles,      anchor,      externalUrl,      _key,      link-> {        _type,        id,        slug      }    }  }
export type HEADER_QUERYResult = {
  headerText: Array<({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet";
    markDefs?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    } | {
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  mainMenu: Array<{
    label: string | null;
    buttonStyles: boolean | null;
    anchor: string | null;
    externalUrl: string | null;
    _key: string;
    link: {
      _type: "home";
      id: null;
      slug: Slug | null;
    } | {
      _type: "infoPage";
      id: null;
      slug: Slug | null;
    } | {
      _type: "lineupPage";
      id: null;
      slug: Slug | null;
    } | {
      _type: "page";
      id: null;
      slug: Slug | null;
    } | null;
  }> | null;
} | null;
// Variable: MAIN_NAV_QUERY
// Query: *[_type == 'siteSettings'][0].mainMenu[] {    ...,    link-> {      title, slug    },    subMenu[] {      ...,      link -> {        title, slug      }    }  }
export type MAIN_NAV_QUERYResult = Array<{
  _key: string;
  _type: "menuItem";
  label?: string;
  link: {
    title: string | null;
    slug: Slug | null;
  } | null;
  anchor?: string;
  externalUrl?: string;
  subMenu: Array<{
    _key: string;
    _type: "menuItem";
    label?: string;
    link: {
      title: string | null;
      slug: Slug | null;
    } | null;
    anchor?: string;
    externalUrl?: string;
    subMenu?: Array<{
      _key: string;
    } & MenuItem>;
    buttonStyles?: boolean;
  }> | null;
  buttonStyles?: boolean;
}> | null;
// Variable: HOME_QUERY
// Query: *[_type == "home"][0] {    hero {      _type,      heroButton {        label,        url      },      heroText,      heroSubText,      heroImage {        ...,        asset-> {          ...,        }      }    },    content[]  }
export type HOME_QUERYResult = {
  hero: {
    _type: "hero";
    heroButton: {
      label: string | null;
      url: string | null;
    } | null;
    heroText: string | null;
    heroSubText: string | null;
    heroImage: {
      asset: {
        _id: string;
        _type: "sanity.imageAsset";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        originalFilename?: string;
        label?: string;
        title?: string;
        description?: string;
        altText?: string;
        sha1hash?: string;
        extension?: string;
        mimeType?: string;
        size?: number;
        assetId?: string;
        uploadId?: string;
        path?: string;
        url?: string;
        metadata?: SanityImageMetadata;
        source?: SanityAssetSourceData;
      } | null;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "altImage";
    } | null;
  } | null;
  content: Array<({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet";
    markDefs?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    } | {
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
} | null;
// Variable: PAGE_QUERY
// Query: *[_type == 'page' && slug.current == $slug][0] {    id,    title,    hero {      _type,      heroButton {        label,        url      },      heroText,      heroSubText,      heroImage {        ...,        asset-> {          ...,        }      }    },    subNav[],    content[]  }
export type PAGE_QUERYResult = {
  id: null;
  title: string | null;
  hero: {
    _type: "hero";
    heroButton: {
      label: string | null;
      url: string | null;
    } | null;
    heroText: string | null;
    heroSubText: string | null;
    heroImage: {
      asset: {
        _id: string;
        _type: "sanity.imageAsset";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        originalFilename?: string;
        label?: string;
        title?: string;
        description?: string;
        altText?: string;
        sha1hash?: string;
        extension?: string;
        mimeType?: string;
        size?: number;
        assetId?: string;
        uploadId?: string;
        path?: string;
        url?: string;
        metadata?: SanityImageMetadata;
        source?: SanityAssetSourceData;
      } | null;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "altImage";
    } | null;
  } | null;
  subNav: Array<{
    _key: string;
  } & MenuItem> | null;
  content: Array<({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet";
    markDefs?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    } | {
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
} | null;
// Variable: LINEUP_QUERY
// Query: *[_type == 'lineupPage'][0] {    title,    schedules[] {      _key,      heading,      backgroundImage,      scheduleItems[] {        _key,        label,        subLabel,        time,        eventType      },      _type    }  }
export type LINEUP_QUERYResult = {
  title: string | null;
  schedules: Array<{
    _key: string;
    heading: string | null;
    backgroundImage: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "altImage";
    } | null;
    scheduleItems: Array<{
      _key: string;
      label: string | null;
      subLabel: string | null;
      time: string | null;
      eventType: Array<string> | null;
    }> | null;
    _type: "schedule";
  }> | null;
} | null;
// Variable: SCHEDULES_QUERY
// Query: *[_type == 'lineupPage'][0].schedules
export type SCHEDULES_QUERYResult = Array<{
  _key: string;
} & Schedule> | null;
// Variable: ARTISTS_QUERY
// Query: *[_type == 'artist'][] {    _id,    name,    local,    spotify,    image  }
export type ARTISTS_QUERYResult = Array<{
  _id: string;
  name: string | null;
  local: boolean | null;
  spotify: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
  } | null;
}>;
// Variable: INFO_QUERY
// Query: *[_type == 'infoPage'][0] {    title,    content  }
export type INFO_QUERYResult = {
  title: string | null;
  content: BlockContent | null;
} | null;
// Variable: FAQS_QUERY
// Query: *[_type == 'faq'][] {    ...,    answer[] {      ...,      markDefs[] {        ...,        'slug': url->slug.current      }    }  }
export type FAQS_QUERYResult = Array<{
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  question?: string;
  slug?: Slug;
  answer: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet";
    markDefs: Array<{
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      _type: "link";
      _key: string;
      slug: string | null;
    }> | null;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
}>;
// Variable: TICKETS_QUERY
// Query: *[_type == 'tickets'][0] {    heading,    text,    ticketOptions[] {      _id,      title,      buyText,      description[],      image,      price    }  }
export type TICKETS_QUERYResult = {
  heading: string | null;
  text: Array<({
    _key: string;
  } & MerchBlock) | ({
    _key: string;
  } & SpecialBlock) | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "form";
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "altImage";
    _key: string;
  } | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet";
    markDefs?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
      _key: string;
    } | {
      externalUrl?: string;
      url?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "home";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "infoPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "lineupPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  ticketOptions: Array<{
    _id: null;
    title: string | null;
    buyText: string | null;
    description: Array<({
      _key: string;
    } & MerchBlock) | ({
      _key: string;
    } & SpecialBlock) | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "form";
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "altImage";
      _key: string;
    } | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet";
      markDefs?: Array<{
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        _type: "file";
        _key: string;
      } | {
        externalUrl?: string;
        url?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "home";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "infoPage";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "lineupPage";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "altImage";
    } | null;
    price: string | null;
  }> | null;
} | null;
// Variable: CONNECT_QUERY
// Query: {    "contact": *[_type == 'siteSettings'][0].contact {      phone,      social,    },    "connect": *[_type == 'connect'][0] {      heading,      text,      slug,      menu[] {        ...,        link-> {          title, slug        }      }    }  }
export type CONNECT_QUERYResult = {
  contact: {
    phone: string | null;
    social: Social | null;
  } | null;
  connect: {
    heading: string | null;
    text: string | null;
    slug: Slug | null;
    menu: Array<{
      _key: string;
      _type: "menuItem";
      label?: string;
      link: {
        title: string | null;
        slug: Slug | null;
      } | null;
      anchor?: string;
      externalUrl?: string;
      subMenu?: Array<{
        _key: string;
      } & MenuItem>;
      buttonStyles?: boolean;
    }> | null;
  } | null;
};
// Variable: FOOTER_QUERY
// Query: *[_type == 'footerSettings'][0] {    footerLogos[] {      ...,       _key    },    sponsor  }
export type FOOTER_QUERYResult = {
  footerLogos: Array<{
    _key: string;
    _type: "footerLogo";
    label?: string;
    logo?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "altImage";
    };
    link?: string;
  }> | null;
  sponsor: FooterSponsor | null;
} | null;
// Variable: FOOTER_NAV_QUERY
// Query: *[_type == 'footerSettings'][0].footerNav[] {    ...,    link-> {      title, slug    },    subMenu[] {      ...,      link -> {        title, slug      }    }  }
export type FOOTER_NAV_QUERYResult = Array<{
  _key: string;
  _type: "menuItem";
  label?: string;
  link: {
    title: string | null;
    slug: Slug | null;
  } | null;
  anchor?: string;
  externalUrl?: string;
  subMenu: Array<{
    _key: string;
    _type: "menuItem";
    label?: string;
    link: {
      title: string | null;
      slug: Slug | null;
    } | null;
    anchor?: string;
    externalUrl?: string;
    subMenu?: Array<{
      _key: string;
    } & MenuItem>;
    buttonStyles?: boolean;
  }> | null;
  buttonStyles?: boolean;
}> | null;

